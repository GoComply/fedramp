// Code generated by https://github.com/GoComply/metaschema; DO NOT EDIT.
// Multiplexers are indirect models needed for serialization/deserialization
// as json and xml files differ materially in their structure.
package assessment_results

import (
	"encoding/json"
)

type ResultsMultiplexer []Results

func (mplex *ResultsMultiplexer) UnmarshalJSON(b []byte) error {
	var l []Results
	switch b[0] {
	case '{':
		var singleton Results
		if err := json.Unmarshal(b, &singleton); err != nil {
			return err
		}
		l = append(l, singleton)
	default:
		if err := json.Unmarshal(b, &l); err != nil {
			return err
		}
	}
	(*mplex) = l
	return nil
}
